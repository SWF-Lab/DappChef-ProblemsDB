// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;


// The system will deploy `Called` for you
// The interface you are going to write will be use to call contract `Called`.
contract Called {
  bool public called = false;

  function setCalled() external {
    called = true;
  }
  function getCalled() external view returns (bool) {
    return called;
  }
}

// TODO 1: write an interface named `ICalled`, implement the two functions which is in contract `Called`. 




contract answer10 {
  Called public calledContract;

  constructor() {
    calledContract = new Called();
  }

  function setCalled() external {
    // TODO 2: Finish this function by using `ICalled` to call `setCalled()` in contract `Called`. 


  }


  // --------------Below are judging functions-------------------
  
  function checkAns() external view returns (bool) {
    return ICalled(address(calledContract)).getCalled();
  }
}