// SPDX-License-Identifier: Apache License
pragma solidity ^0.8.17;

// The system will deploy `Called` for you, all use of interface is coded for you. 
// All you need to write is the interface declaration.
contract Called {
  bool public called = false;

  function setCalled() external {
    called = true;
  }
  function getCalled() external view returns (bool) {
    return called;
  }
}

// TODO: write an interface named `ICalled`, implement the two functions in contract `Called`. 


contract problem10 {
  Called public calledContract;

  constructor() {
    calledContract = new Called();
  }

  function setCalled() external {
    ICalled(address(calledContract)).setCalled();
  }

  function checkAns() external view returns (bool) {
    return ICalled(address(calledContract)).getCalled();
  }
}